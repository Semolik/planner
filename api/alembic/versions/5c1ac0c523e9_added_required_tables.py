"""Added required tables

Revision ID: 5c1ac0c523e9
Revises: 
Create Date: 2025-08-20 16:14:56.856676

"""
from  typing import Sequence, Union

from  alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = '5c1ac0c523e9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('chats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('pin_message_id', sa.Integer(), nullable=True),
    sa.Column('chat_role', sa.Enum('PHOTOGRAPHER', 'COPYWRITER', 'DESIGNER', name='userrole'), nullable=False),
    sa.Column('members_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'chat_role')
    )
    op.create_table('event_groups',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('organizer', sa.String(), nullable=False),
    sa.Column('link', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_groups_id'), 'event_groups', ['id'], unique=False)
    op.create_table('event_levels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_event_levels_id'), 'event_levels', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institutes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('personal_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('approve_link', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personal_events_id'), 'personal_events', ['id'], unique=False)
    op.create_table('requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('user_role', sa.Enum('PHOTOGRAPHER', 'COPYWRITER', 'DESIGNER', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks_token',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('role', sa.Enum('PHOTOGRAPHER', 'COPYWRITER', 'DESIGNER', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_token_id'), 'tasks_token', ['id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_approved', sa.Boolean(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('organizer', sa.String(), nullable=False),
    sa.Column('link', sa.Text(), nullable=False),
    sa.Column('required_photographers', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('level_id', sa.UUID(), nullable=True),
    sa.Column('group_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['event_groups.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_id'], ['event_levels.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('vk_id', sa.Integer(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('group', sa.String(), nullable=False),
    sa.Column('institute_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institute_id'], ['institutes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('changed_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('field_name', sa.String(), nullable=False),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('new_value', sa.String(), nullable=True),
    sa.Column('changed_by', sa.UUID(), nullable=True),
    sa.Column('change_type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('PHOTOGRAPHER', 'COPYWRITER', 'DESIGNER', name='userrole'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role')
    )
    op.create_table('task_files',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', 'file_id')
    )
    op.create_table('task_images',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', 'image_id')
    )
    op.create_table('typed_tasks',
    sa.Column('due_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('task_type', sa.Enum('PHOTOGRAPHER', 'COPYWRITER', 'DESIGNER', name='userrole'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('for_single_user', sa.Boolean(), nullable=False),
    sa.Column('link', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id', 'task_type', name='uq_typed_task_task_id_task_type')
    )
    op.create_index(op.f('ix_typed_tasks_id'), 'typed_tasks', ['id'], unique=False)
    op.create_table('task_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type_task_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('state', sa.Enum('PENDING', 'CANCELED', 'COMPLETED', name='state'), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['type_task_id'], ['typed_tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_task_id', 'user_id', name='uq_task_states_type_task_id_user_id')
    )
    op.create_index(op.f('ix_task_states_id'), 'task_states', ['id'], unique=False)
    op.create_table('task_states_periods',
    sa.Column('task_state_id', sa.UUID(), nullable=False),
    sa.Column('period_start', sa.Time(), nullable=False),
    sa.Column('period_end', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['task_state_id'], ['task_states.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_state_id'),
    sa.UniqueConstraint('task_state_id', 'period_start', 'period_end', name='uq_task_state_periods_task_state_id_period_start_period_end')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_states_periods')
    op.drop_index(op.f('ix_task_states_id'), table_name='task_states')
    op.drop_table('task_states')
    op.drop_index(op.f('ix_typed_tasks_id'), table_name='typed_tasks')
    op.drop_table('typed_tasks')
    op.drop_table('task_images')
    op.drop_table('task_files')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_table('audit_log')
    op.drop_table('users')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_tasks_token_id'), table_name='tasks_token')
    op.drop_table('tasks_token')
    op.drop_table('requirements')
    op.drop_index(op.f('ix_personal_events_id'), table_name='personal_events')
    op.drop_table('personal_events')
    op.drop_table('institutes')
    op.drop_table('images')
    op.drop_table('files')
    op.drop_index(op.f('ix_event_levels_id'), table_name='event_levels')
    op.drop_table('event_levels')
    op.drop_index(op.f('ix_event_groups_id'), table_name='event_groups')
    op.drop_table('event_groups')
    op.drop_table('chats')
    op.drop_table('app_settings')
    # ### end Alembic commands ###
